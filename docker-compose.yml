x-db-env: &db-env
  PGHOST: db
  PGUSER: myuser
  PGPASSWORD: mypass
  PGDATABASE: mydb
  PGPORT: 5432

networks:
  proxy:
    external: true
  backend:

volumes:
  db-data:

services:
  web:
    build: app/.
    environment:
      <<: *db-env
    networks:
      - proxy
      - backend
    depends_on:
      - migrate

  migrate:
    build:
      context: database_migrations
    networks:
      - backend
    environment:
      <<: *db-env
      DATABASE_URL: "postgres://${PGUSER}:${PGPASSWORD}@db:${PGPORT}/${PGDATABASE}"
    volumes:
      - ./migrations:/app/migrations
    command: "npm run migrate up"

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: mydb
    networks:
      - backend
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - proxy
    depends_on:
      - web
